#!/bin/bash
# Modified from http://stackoverflow.com/a/1617048/359287

begin="" # The unshortened beginning of the path.
homebegin="" # The unshortened beginning of the path.
shortbegin="" # The shortened beginning of the path.
current="" # The section of the path we're currently working on.
end="${2:-$(pwd)}/" # The unmodified rest of the path.
end="${end#/}" # Strip the first /
shortenedpath="$end" # The whole path, to check the length.

shopt -q nullglob && NGV="-s" || NGV="-u" # Store the value for later.
shopt -s nullglob    # Without this, anything that doesn't exist in the filesystem turns into */*/*/...

while [[ "$end" ]]
do
  current="${end%%/*}" # everything before the first /
  end="${end#*/}"    # everything after the first /

  shortcur="$current"

  for ((i=${#current}-2; i>=0; i--))
  do
    [[ ${#current} -le 20 ]] && [[ -z "$end" ]] && break
    subcurrent="${current:0:i}"
    matching=("$begin/$subcurrent"*) # Array of all files that start with $subcurrent. 
    (( ${#matching[*]} != 1 )) && break # Stop shortening if more than one file matches.
    [[ -z "$end" ]] && shortcur="$subcurrent..." # Add character filler at the end of this string
    [[ -n "$end" ]] && shortcur="$subcurrent+" # Add character filler at the end of this string
  done

  begin="$begin/$current"
  homebegin="$homebegin/$current"
  [[ "$homebegin" =~ ^"$HOME"(/|$) ]] && homebegin="~${homebegin#$HOME}"
  shortbegin="$shortbegin/$shortcur"
  [[ "$homebegin" == "~" ]] && shortbegin="~"
  shortenedpath="$shortbegin/$end"
done

shortenedpath="${shortenedpath%/}" # strip trailing /
shortenedpath="${shortenedpath#/}" # strip leading /

[[ ! "$shortenedpath" =~ ^"~" ]] && echo "/$shortenedpath" # Make sure it starts with /
[[ "$shortenedpath" =~ ^"~" ]] && echo "$shortenedpath" # Don't use / for home dir

shopt "$NGV" nullglob # Reset nullglob in case this is being used as a function.
